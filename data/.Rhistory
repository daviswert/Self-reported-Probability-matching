geom_line(size=1)+
ylab("Bias Accuracy")+
facet_wrap(~bias)
trial_aggr$aggr_acc
trial_aggr$aubj_proportion
trial_aggr$subj_proportion
ggplot(data=trial_aggr,aes(x=trial_no,y=subj_proportion))+
geom_line(size=1.5)+
facet_wrap(~bias)
ggplot(trial_aggr, aes(x=trial_no,y=aggr_acc))+
geom_line(size=1)+
ylab("Bias Accuracy")+
facet_wrap(~bias)
trial_aggr<-ddply(trim,
.(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)),
trial_no = factor(trial))
trial_aggr<-ddply(trim,
.(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)),
trial_no = to.n(trial))
trial_aggr$aggr_acc<-cumsum(trial_aggr$subj_proportion)/trial_aggr$trial
trial_aggr$aggr_acc<-cumsum(trial_aggr$subj_proportion)/trial_aggr$trial_no
trial_aggr<-ddply(trim,
c(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)))
trial_aggr$trial_no<-to.n(trial_aggr$trial)
trial_aggr<-ddply(trim,
c("trial","bias"), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)))
trial_aggr$trial_no<-to.n(trial_aggr$trial)
trial_aggr$subj_proportion<-trial_aggr$no_correct/trial_aggr$no_total
trial_aggr[match(1:50, trial_aggr$trial_no)]
trial_aggr[match(1:50, trial_aggr$trial_no),]
trial_aggr[order(trial_no,bias),]
trial_aggr[order(trial,bias),]
attach(trial_aggr)
trial_no<-to.n(trial)
subj_proportion<-no_correct/no_total
trial_aggr[order(trial,bias),]
trial_aggr[order(trial_no,bias),]
trial_aggr[order(bias,trial_no),]
attach(trial_aggr)
trial_no<-to.n(trial)
subj_proportion<-no_correct/no_total
trial_aggr<-trial_aggr[order(bias,trial_no),]
aggr_acc<-cumsum(subj_proportion)/trial_no
trial_aggr$aggr_acc
aggr_acc
trial_aggr
mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
source("C:/Users/Davis/Downloads/Ranalysis-master/Ranalysis-master/useful.R")
mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
detach(trial_aggr)
ggplot(trial_aggr, aes(x=trial_no,y=aggr_acc))+
geom_line(size=1)+
ylab("Bias Accuracy")+
facet_wrap(~bias)
trial_aggr
mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
trial_aggr
trial_aggr<-mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
trial_aggr
ggplot(trial_aggr, aes(x=trial_no,y=aggr_acc))+
geom_line(size=1)+
ylab("Bias Accuracy")+
facet_wrap(~bias)
ggplot(trial_aggr, aes(x=trial_no,y=aggr_acc))+
geom_line(size=1)+
ylim(0,1)+
ylab("Bias Accuracy")+
facet_wrap(~bias)
setwd("D:/Git/Self-reported-Probability-matching/data")
df<-read.table('bandit1-trials.tsv',header=T,stringsAsFactors=FALSE)
#trimming the df table to exclude the prevalence answers
trim<-subset(df, trial_type=="multi_trial")
#new column with timeouts registered as Incorrect
trim$rs_timeOutWrong<-trim$result
trim[which(trim$result==-1),]$rs_timeOutWrong<-0
#new column indicating correct bias-matching
trim$bias_match<-ifelse(trim$response==trim$bias_direction,1,0)
#aggregating over subjects - currently not used
subj_aggr <- ddply(trim, .(workerid), summarise,
bias=sample(bias,1),
bias_direction=sample(bias_direction,1),
rt=mean(rt),
rs_acc=mean(rs_timeOutWrong),
match_acc=mean(bias_match))
#forming cumulative metrics for each subject
score_aggr<-ddply(trim, .(workerid), summarise,
relative_prop = cumsum(bias_match)/to.n(trial),
trial=to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial),
bias = factor(bias),
Lbias = factor(Lbias),
biasDir = factor(bias_direction))
score_aggr<-ddply(trim, .(workerid), summarise,
relative_prop = cumsum(bias_match)/to.n(trial),
trial=to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial),
bias = factor(bias),
Lbias = factor(Lbias),
biasDir = factor(bias_direction))
score_aggr<-ddply(trim, .(workerid), summarise,
relative_prop = cumsum(bias_match)/to.n(trial),
trial=to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial))
score_aggr<-ddply(trim, .(workerid), summarise,
relative_prop = cumsum(bias_match)/to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial),
bias = factor(bias),
Lbias = factor(Lbias),
biasDir = factor(bias_direction))
score_aggr<-ddply(trim, .(workerid), summarise,
relative_prop = cumsum(bias_match)/to.n(trial),
trial=to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial))
score_aggr<-ddply(trim, .(workerid), summarise,
relative_prop = cumsum(bias_match)/to.n(trial))
score_aggr<-ddply(trim, .(workerid), summarise)
library(MASS)
source("C:/Users/Davis/Downloads/Ranalysis-master/Ranalysis-master/useful.R")
setwd("D:/Git/Self-reported-Probability-matching/data")
df<-read.table('bandit1-trials.tsv',header=T,stringsAsFactors=FALSE)
#trimming the df table to exclude the prevalence answers
trim<-subset(df, trial_type=="multi_trial")
#new column with timeouts registered as Incorrect
trim$rs_timeOutWrong<-trim$result
trim[which(trim$result==-1),]$rs_timeOutWrong<-0
#new column indicating correct bias-matching
trim$bias_match<-ifelse(trim$response==trim$bias_direction,1,0)
#aggregating over subjects - currently not used
subj_aggr <- ddply(trim, .(workerid), summarise,
bias=sample(bias,1),
bias_direction=sample(bias_direction,1),
rt=mean(rt),
rs_acc=mean(rs_timeOutWrong),
match_acc=mean(bias_match))
#forming cumulative metrics for each subject
score_aggr<-ddply(trim, .(workerid), summarise,
relative_prop = cumsum(bias_match)/to.n(trial),
trial=to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial),
bias = factor(bias),
Lbias = factor(Lbias),
biasDir = factor(bias_direction))
source("C:/Users/Davis/Downloads/Ranalysis-master/Ranalysis-master/useful.R")
library(MASS)
source("C:/Users/Davis/Downloads/Ranalysis-master/Ranalysis-master/useful.R")
setwd("D:/Git/Self-reported-Probability-matching/data")
df<-read.table('bandit1-trials.tsv',header=T,stringsAsFactors=FALSE)
#trimming the df table to exclude the prevalence answers
trim<-subset(df, trial_type=="multi_trial")
#new column with timeouts registered as Incorrect
trim$rs_timeOutWrong<-trim$result
trim[which(trim$result==-1),]$rs_timeOutWrong<-0
#new column indicating correct bias-matching
trim$bias_match<-ifelse(trim$response==trim$bias_direction,1,0)
#aggregating over subjects - currently not used
subj_aggr <- ddply(trim, .(workerid), summarise,
bias=sample(bias,1),
bias_direction=sample(bias_direction,1),
rt=mean(rt),
rs_acc=mean(rs_timeOutWrong),
match_acc=mean(bias_match))
#forming cumulative metrics for each subject
score_aggr<-ddply(trim, .(workerid), summarise,
relative_prop = cumsum(bias_match)/to.n(trial),
trial=to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial),
bias = factor(bias),
Lbias = factor(Lbias),
biasDir = factor(bias_direction))
score_aggr<-ddply(trim, .(workerid), summarise,
relative_prop = cumsum(bias_match)/(trial))
score_aggr<-ddply(trim, .(workerid), summarise,
relative_prop = cumsum(bias_match)/to.n(trial))
score_aggr<-ddply(trim, .(workerid), mutate,
relative_prop = cumsum(bias_match)/to.n(trial))
score_aggr
score_aggr<-ddply(trim, .(workerid), mutate,
relative_prop = cumsum(bias_match)/to.n(trial),
trial=to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial),
bias = factor(bias),
Lbias = factor(Lbias),
biasDir = factor(bias_direction))
#forming cumulative metrics for each trial
trial_aggr<-ddply(trim, .(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)))
attach(trial_aggr)
trial_no<-to.n(trial)
subj_proportion<-no_correct/no_total
trial_aggr<-trial_aggr[order(bias,trial_no),]
trial_aggr<-mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
trial_aggr<-trial_aggr[order(bias,trial_no),]
trial_aggr<-mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
detach(trial_aggr)
setwd("D:/Git/Self-reported-Probability-matching/data")
df<-read.table('bandit1-trials.tsv',header=T,stringsAsFactors=FALSE)
#trimming the df table to exclude the prevalence answers
trim<-subset(df, trial_type=="multi_trial")
#new column with timeouts registered as Incorrect
trim$rs_timeOutWrong<-trim$result
trim[which(trim$result==-1),]$rs_timeOutWrong<-0
#new column indicating correct bias-matching
trim$bias_match<-ifelse(trim$response==trim$bias_direction,1,0)
#aggregating over subjects - currently not used
subj_aggr <- ddply(trim, .(workerid), summarise,
bias=sample(bias,1),
bias_direction=sample(bias_direction,1),
rt=mean(rt),
rs_acc=mean(rs_timeOutWrong),
match_acc=mean(bias_match))
#forming cumulative metrics for each subject
score_aggr<-ddply(trim, .(workerid), mutate,
relative_prop = cumsum(bias_match)/to.n(trial),
trial=to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial),
bias = factor(bias),
Lbias = factor(Lbias),
biasDir = factor(bias_direction))
trial_aggr<-ddply(trim, .(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)))
attach(trial_aggr)
trial_no<-to.n(trial)
subj_proportion<-no_correct/no_total
trial_aggr<-trial_aggr[order(bias,trial_no),]
trial_aggr<-mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
detach(trial_aggr)
library(MASS)
source("C:/Users/Davis/Downloads/Ranalysis-master/Ranalysis-master/useful.R")
#setwd("../data/")
setwd("D:/Git/Self-reported-Probability-matching/data")
df<-read.table('bandit1-trials.tsv',header=T,stringsAsFactors=FALSE)
#trimming the df table to exclude the prevalence answers
trim<-subset(df, trial_type=="multi_trial")
#new column with timeouts registered as Incorrect
trim$rs_timeOutWrong<-trim$result
trim[which(trim$result==-1),]$rs_timeOutWrong<-0
#new column indicating correct bias-matching
trim$bias_match<-ifelse(trim$response==trim$bias_direction,1,0)
#aggregating over subjects - currently not used
subj_aggr <- ddply(trim, .(workerid), summarise,
bias=sample(bias,1),
bias_direction=sample(bias_direction,1),
rt=mean(rt),
rs_acc=mean(rs_timeOutWrong),
match_acc=mean(bias_match))
#forming cumulative metrics for each subject
score_aggr<-ddply(trim, .(workerid), mutate,
relative_prop = cumsum(bias_match)/to.n(trial),
trial=to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial),
bias = factor(bias),
Lbias = factor(Lbias),
biasDir = factor(bias_direction))
#forming cumulative metrics for each trial
trial_aggr<-ddply(trim, .(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)))
attach(trial_aggr)
trial_no<-to.n(trial)
subj_proportion<-no_correct/no_total
trial_aggr<-trial_aggr[order(bias,trial_no),]
trial_aggr<-mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
detach(trial_aggr)
attach(trial_aggr)
trial_no<-to.n(trial)
subj_proportion<-no_correct/no_total
trial_aggr<-trial_aggr[order(bias,trial_no),]
mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
detach(trial_aggr)
attach(trial_aggr)
trial_no<-to.n(trial)
subj_proportion<-no_correct/no_total
trial_aggr<-trial_aggr[order(bias,trial_no),]
trial_aggr<-plyr::mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
detach(trial_aggr)
library(MASS)
source("C:/Users/Davis/Downloads/Ranalysis-master/Ranalysis-master/useful.R")
#setwd("../data/")
setwd("D:/Git/Self-reported-Probability-matching/data")
df<-read.table('bandit1-trials.tsv',header=T,stringsAsFactors=FALSE)
#trimming the df table to exclude the prevalence answers
trim<-subset(df, trial_type=="multi_trial")
#new column with timeouts registered as Incorrect
trim$rs_timeOutWrong<-trim$result
trim[which(trim$result==-1),]$rs_timeOutWrong<-0
#new column indicating correct bias-matching
trim$bias_match<-ifelse(trim$response==trim$bias_direction,1,0)
#aggregating over subjects - currently not used
subj_aggr <- ddply(trim, .(workerid), summarise,
bias=sample(bias,1),
bias_direction=sample(bias_direction,1),
rt=mean(rt),
rs_acc=mean(rs_timeOutWrong),
match_acc=mean(bias_match))
#forming cumulative metrics for each subject
score_aggr<-ddply(trim, .(workerid), mutate,
relative_prop = cumsum(bias_match)/to.n(trial),
trial=to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial),
bias = factor(bias),
Lbias = factor(Lbias),
biasDir = factor(bias_direction))
#forming cumulative metrics for each trial
trial_aggr<-ddply(trim, .(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)))
attach(trial_aggr)
trial_no<-to.n(trial)
subj_proportion<-no_correct/no_total
# trial_aggr<-trial_aggr[order(bias,trial_no),]
# trial_aggr<-plyr::mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
detach(trial_aggr)
#Reaction time distribution
df$typegroup<-paste(df$trial_type, df$bias, sep='_', collapse=NULL)
qplot(data=df,x=rt/1000,geom='histogram')+
facet_wrap(~typegroup,scales='free')+
ylab("Count")+
xlab("Reaction Time (seconds)")
#What % of subjects match their bias during each trial
ggplot(data=trial_aggr,aes(x=trial_no,y=subj_proportion))+
geom_line(size=1.5)+
facet_wrap(~bias)
trial_aggr<-ddply(trim, .(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)),
subj_proportion<-no_correct/no_total)
trial_aggr<-ddply(trim, .(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)),
subj_proportion = no_correct/no_total)
ggplot(data=trial_aggr,aes(x=trial_no,y=subj_proportion))+
geom_line(size=1.5)+
facet_wrap(~bias)
trial_aggr<-ddply(trim, .(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)))
trial_aggr$trial_no<-to.n(trial_aggr$trial)
trial_aggr$subj_proportion<-trial_aggr$no_correct/trial_aggr$no_total
ggplot(data=trial_aggr,aes(x=trial_no,y=subj_proportion))+
geom_line(size=1.5)+
facet_wrap(~bias)
trial_aggr
trial_aggr<-trial_aggr[order(bias,trial_no),]
trial_aggr
trial_aggr<-plyr::mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
trial_aggr
trial_aggr<-ddply(trim, .(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)))
trial_aggr$trial_no<-to.n(trial_aggr$trial)
trial_aggr$subj_proportion<-trial_aggr$no_correct/trial_aggr$no_total
#trial_aggr<-trial_aggr[order(bias,trial_no),]
trial_aggr<-plyr::mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
trial_aggr
#setwd("../data/")
setwd("D:/Git/Self-reported-Probability-matching/data")
df<-read.table('bandit1-trials.tsv',header=T,stringsAsFactors=FALSE)
#trimming the df table to exclude the prevalence answers
trim<-subset(df, trial_type=="multi_trial")
#new column with timeouts registered as Incorrect
trim$rs_timeOutWrong<-trim$result
trim[which(trim$result==-1),]$rs_timeOutWrong<-0
#new column indicating correct bias-matching
trim$bias_match<-ifelse(trim$response==trim$bias_direction,1,0)
#aggregating over subjects - currently not used
subj_aggr <- ddply(trim, .(workerid), summarise,
bias=sample(bias,1),
bias_direction=sample(bias_direction,1),
rt=mean(rt),
rs_acc=mean(rs_timeOutWrong),
match_acc=mean(bias_match))
#forming cumulative metrics for each subject
score_aggr<-ddply(trim, .(workerid), mutate,
relative_prop = cumsum(bias_match)/to.n(trial),
trial=to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial),
bias = factor(bias),
Lbias = factor(Lbias),
biasDir = factor(bias_direction))
#forming cumulative metrics for each trial
trial_aggr<-ddply(trim, .(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)))
trial_aggr$trial_no<-to.n(trial_aggr$trial)
trial_aggr$subj_proportion<-trial_aggr$no_correct/trial_aggr$no_total
trial_aggr<-trial_aggr[order(bias,trial_no),]
trial_aggr<-plyr::mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
score_aggr
ggplot(trial_aggr, aes(x=trial,y=aggr_acc))+
geom_line(size=1)+
ylim(0,1)+
ylab("Bias Accuracy")+
facet_wrap(~bias)
ggplot(trial_aggr, aes(x=trial_no,y=aggr_acc))+
geom_line(size=1)+
ylim(0,1)+
ylab("Bias Accuracy")+
facet_wrap(~bias)
ggplot(trial_aggr, aes(x=trial_no,y=aggr_acc))+
geom_line(size=1)+
ylim(0,1)+
ylab("Bias Accuracy")+
facet_wrap(~bias)
trial_acc
trial_aggr
trial_aggr[80]
trial_aggr$aggr_acc
library(MASS)
source("C:/Users/Davis/Downloads/Ranalysis-master/Ranalysis-master/useful.R")
#setwd("../data/")
setwd("D:/Git/Self-reported-Probability-matching/data")
df<-read.table('bandit1-trials.tsv',header=T,stringsAsFactors=FALSE)
#trimming the df table to exclude the prevalence answers
trim<-subset(df, trial_type=="multi_trial")
#new column with timeouts registered as Incorrect
trim$rs_timeOutWrong<-trim$result
trim[which(trim$result==-1),]$rs_timeOutWrong<-0
#new column indicating correct bias-matching
trim$bias_match<-ifelse(trim$response==trim$bias_direction,1,0)
#aggregating over subjects - currently not used
subj_aggr <- ddply(trim, .(workerid), summarise,
bias=sample(bias,1),
bias_direction=sample(bias_direction,1),
rt=mean(rt),
rs_acc=mean(rs_timeOutWrong),
match_acc=mean(bias_match))
#forming cumulative metrics for each subject
score_aggr<-ddply(trim, .(workerid), mutate,
relative_prop = cumsum(bias_match)/to.n(trial),
trial=to.n(trial),
relative_left = cumsum(response=='L')/to.n(trial),
bias = factor(bias),
Lbias = factor(Lbias),
biasDir = factor(bias_direction))
#forming cumulative metrics for each trial
trial_aggr<-ddply(trim, .(trial,bias), summarise,
no_correct = sum(bias_match),
no_total = length(unique(workerid)))
trial_aggr$trial_no<-to.n(trial_aggr$trial)
trial_aggr$subj_proportion<-trial_aggr$no_correct/trial_aggr$no_total
trial_aggr<-trial_aggr[order(trial_aggr$bias,trial_aggr$trial_no),]
trial_aggr<-mutate(group_by(trial_aggr,bias), aggr_acc=cumsum(subj_proportion)/trial_no)
ggplot(trial_aggr, aes(x=trial_no,y=aggr_acc))+
geom_line(size=1)+
ylim(0,1)+
ylab("Bias Accuracy")+
facet_wrap(~bias)
qplot(data=df[which(trial_type==multi_trial),],x=rt/1000,geom='histogram')+
facet_wrap(~bias)+
ylab("Count")+
xlab("Reaction Time (seconds)")
qplot(data=df[which(df$trial_type==multi_trial),],x=rt/1000,geom='histogram')+
facet_wrap(~bias)+
ylab("Count")+
xlab("Reaction Time (seconds)")
qplot(data=df[which(df$trial_type=="multi_trial"),],x=rt/1000,geom='histogram')+
facet_wrap(~bias)+
ylab("Count")+
xlab("Reaction Time (seconds)")
qplot(data=df[which(df$trial_type=="elicit_prevalence"),],x=rt/1000,geom='histogram')+
facet_wrap(~bias)+
ylab("Count")+
xlab("Reaction Time (seconds)")
prev<-df[which(df$trial_type=="elicit_prevalence")]
prev<-df[which(df$trial_type=="elicit_prevalence"), workerid, rt, Lbias, trial, response]
prev<-df[which(df$trial_type=="elicit_prevalence"),]
prev<-df[which(df$trial_type=="elicit_prevalence"), c(workerid, rt, Lbias, trial, response)]
prev<-df[which(df$trial_type=="elicit_prevalence"), c('workerid', 'rt', 'Lbias', 'trial', 'response')]
prev$match_acc <- subj_aggr$match_acc
score1<-prev[which(prev$trial=="catch1"),]$response=="2"
prev<-df[which(df$trial_type=="elicit_prevalence"), c('workerid', 'rt', 'Lbias', 'trial', 'response')]
score1<-prev[which(prev$trial=="catch1"),]$response=="2"
score2<-prev[which(prev$trial=="catch2"),]$response=="2"
score3<-prev[which(prev$trial=="catch3"),]$response=="50"
subj_prev <- prev[which(prev$trial=="prevalence"), c('workerid', 'Lbias', 'response')]
subj_prev$catch_score<-score1+score2+score3
subj_prev
subj_prev$off_by <- subj_prev$response - 100*subj_prev$Lbias
subj_prev$off_by <- as.numeric(subj_prev$response) - 100*subj_prev$Lbias
subj_prev$trial_acc <- subj_aggr$match_acc
subj_prev
ggplot(subj_prev, aes(x=trial_acc,y=off_by))+
geom_point(shape=1)
ggplot(subj_prev, aes(x=trial_acc,y=off_by))+
geom_point(shape=1)+
ylim(-75,75)
ggplot(subj_prev, aes(x=trial_acc,y=off_by))+
geom_point(shape=1)+
ylim(-75,75)+
geom_smooth(method=lm)
ggplot(subj_prev, aes(x=catch_score,y=off_by))+
geom_point(shape=1)+
ylim(-75,75)+
geom_smooth(method=lm)
ggplot(subj_prev, aes(x=catch_score, y=off_by, fill=catch_score))+
geom_boxplot()+
ylim(-75,75)+
guides(fill=FALSE)
ggplot(subj_prev, aes(x=factor(catch_score), y=off_by, fill=catch_score))+
geom_boxplot()+
ylim(-75,75)+
guides(fill=FALSE)
